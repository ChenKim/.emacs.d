;; Object include/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "include/"
  :tables
  (list
    (semanticdb-table "sm_apb_gpio_defs.h"
      :major-mode 'c-mode
      :tags 
        '( ("__SM_APB_GPIO_DEFS_H__" variable (:constant-flag t) nil [40 62])
            ("APB_GPIO_BASE" variable (:constant-flag t) nil [217 230])
            ("GPIO_SWPORTA_DR_OFFSET" variable (:constant-flag t) nil [271 293])
            ("GPIO_SWPORTA_DDR_OFFSET" variable (:constant-flag t) nil [310 333])
            ("GPIO_SWPORTA_CTL_OFFSET" variable (:constant-flag t) nil [349 372])
            ("GPIO_INTEN_OFFSET" variable (:constant-flag t) nil [388 405])
            ("GPIO_INTMASK_OFFSET" variable (:constant-flag t) nil [427 446])
            ("GPIO_INTTYPE_LEVEL_OFFSET" variable (:constant-flag t) nil [466 491])
            ("GPIO_INT_POLARITY_OFFSET" variable (:constant-flag t) nil [505 529])
            ("GPIO_INTSTATUS_OFFSET" variable (:constant-flag t) nil [544 565])
            ("GPIO_RAW_INTSTATUS_OFFSET" variable (:constant-flag t) nil [583 608])
            ("GPIO_DEBOUNCE_OFFSET" variable (:constant-flag t) nil [622 642])
            ("GPIO_PORTA_EOI_OFFSET" variable (:constant-flag t) nil [661 682])
            ("GPIO_EXT_PORTA_OFFSET" variable (:constant-flag t) nil [700 721])
            ("GPIO_LS_SYNC_OFFSET" variable (:constant-flag t) nil [739 758])
            ("GPIO_ID_CODE_OFFSET" variable (:constant-flag t) nil [778 797])
            ("GPIO_VER_ID_CODE_OFFSET" variable (:constant-flag t) nil [817 840])
            ("GPIO_CONFIGID_REG2_OFFSET" variable (:constant-flag t) nil [857 882])
            ("GPIO_CONFIGID_REG1_OFFSET" variable (:constant-flag t) nil [897 922])
            ("GPIO_VERSION_ID_OFFSET" variable (:constant-flag t) nil [937 959])
            ("GPIO_PERIPH_ID_OFFSET" variable (:constant-flag t) nil [977 998])
            ("GPIO_SWPORTA_DR" variable (:constant-flag t) nil [1017 1032])
            ("GPIO_SWPORTA_DDR" variable (:constant-flag t) nil [1094 1110])
            ("GPIO_SWPORTA_CTL" variable (:constant-flag t) nil [1172 1188])
            ("GPIO_INTEN" variable (:constant-flag t) nil [1250 1260])
            ("GPIO_INTMASK" variable (:constant-flag t) nil [1322 1334])
            ("GPIO_INTTYPE_LEVEL" variable (:constant-flag t) nil [1396 1414])
            ("GPIO_INT_POLARITY" variable (:constant-flag t) nil [1476 1493])
            ("GPIO_INTSTATUS" variable (:constant-flag t) nil [1555 1569])
            ("GPIO_RAW_INTSTATUS" variable (:constant-flag t) nil [1631 1649])
            ("GPIO_DEBOUNCE" variable (:constant-flag t) nil [1711 1724])
            ("GPIO_PORTA_EOI" variable (:constant-flag t) nil [1786 1800])
            ("GPIO_EXT_PORTA" variable (:constant-flag t) nil [1862 1876])
            ("GPIO_LS_SYNC" variable (:constant-flag t) nil [1938 1950])
            ("GPIO_ID_CODE" variable (:constant-flag t) nil [2012 2024])
            ("GPIO_VER_ID_CODE" variable (:constant-flag t) nil [2086 2102])
            ("GPIO_CONFIGID_REG2" variable (:constant-flag t) nil [2165 2183])
            ("GPIO_CONFIGID_REG1" variable (:constant-flag t) nil [2246 2264])
            ("GPIO_VERSION_ID" variable (:constant-flag t) nil [2327 2342])
            ("GPIO_PERIPH_ID" variable (:constant-flag t) nil [2405 2419]))          
      :file "sm_apb_gpio_defs.h"
      :pointmax 2514
      :fsize 2513
      :lastmodtime '(21934 1030 503890 386000)
      :unmatched-syntax nil
      :lexical-table 
        '(("GPIO_SWPORTA_CTL_OFFSET" . ((number "0x08" 375 . 379)))
          ("GPIO_INTEN_OFFSET" . ((number "0x30" 414 . 418)))
          ("GPIO_INT_POLARITY_OFFSET" . ((number "0x3C" 531 . 535)))
          ("GPIO_ID_CODE_OFFSET" . ((number "0x64" 804 . 808)))
          ("GPIO_CONFIGID_REG1_OFFSET" . ((number "0x74" 923 . 927)))
          ("GPIO_CONFIGID_REG1" (spp-arg-list ("x") 2264 . 2267) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_CONFIGID_REG1_OFFSET)" 2271 . 2317)))
          ("GPIO_VERSION_ID" (spp-arg-list ("x") 2342 . 2345) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_VERSION_ID_OFFSET)" 2352 . 2395)))
          ("GPIO_INTMASK_OFFSET" . ((number "0x34" 453 . 457)))
          ("GPIO_DEBOUNCE_OFFSET" . ((number "0x48" 648 . 652)))
          ("GPIO_PORTA_EOI_OFFSET" . ((number "0x4C" 687 . 691)))
          ("GPIO_PERIPH_ID_OFFSET" . ((number "0x7C" 1003 . 1007)))
          ("GPIO_SWPORTA_DDR" (spp-arg-list ("x") 1110 . 1113) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_SWPORTA_DDR_OFFSET)" 1119 . 1163)))
          ("GPIO_LS_SYNC" (spp-arg-list ("x") 1950 . 1953) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_LS_SYNC_OFFSET)" 1963 . 2003)))
          ("GPIO_VER_ID_CODE" (spp-arg-list ("x") 2102 . 2105) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_VER_ID_CODE_OFFSET)" 2111 . 2155)))
          ("GPIO_CONFIGID_REG2" (spp-arg-list ("x") 2183 . 2186) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_CONFIGID_REG2_OFFSET)" 2190 . 2236)))
          ("APB_GPIO_BASE" (spp-arg-list ("x") 230 . 233) . ((symbol "SM_SM_APB_GPIO0_BASE" 234 . 254)))
          ("GPIO_RAW_INTSTATUS_OFFSET" . ((number "0x44" 609 . 613)))
          ("GPIO_VERSION_ID_OFFSET" . ((number "0x78" 963 . 967)))
          ("GPIO_ID_CODE" (spp-arg-list ("x") 2024 . 2027) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_ID_CODE_OFFSET)" 2037 . 2077)))
          ("GPIO_SWPORTA_DDR_OFFSET" . ((number "0x04" 336 . 340)))
          ("GPIO_INTSTATUS_OFFSET" . ((number "0x40" 570 . 574)))
          ("GPIO_EXT_PORTA_OFFSET" . ((number "0x50" 726 . 730)))
          ("GPIO_CONFIGID_REG2_OFFSET" . ((number "0x70" 883 . 887)))
          ("GPIO_INTEN" (spp-arg-list ("x") 1260 . 1263) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_INTEN_OFFSET)" 1275 . 1313)))
          ("GPIO_INTSTATUS" (spp-arg-list ("x") 1569 . 1572) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_INTSTATUS_OFFSET)" 1580 . 1622)))
          ("GPIO_PORTA_EOI" (spp-arg-list ("x") 1800 . 1803) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_PORTA_EOI_OFFSET)" 1811 . 1853)))
          ("GPIO_EXT_PORTA" (spp-arg-list ("x") 1876 . 1879) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_EXT_PORTA_OFFSET)" 1887 . 1929)))
          ("GPIO_PERIPH_ID" (spp-arg-list ("x") 2419 . 2422) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_PERIPH_ID_OFFSET)" 2430 . 2472)))
          ("GPIO_INTMASK" (spp-arg-list ("x") 1334 . 1337) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_INTMASK_OFFSET)" 1347 . 1387)))
          ("GPIO_VER_ID_CODE_OFFSET" . ((number "0x6C" 843 . 847)))
          ("GPIO_SWPORTA_CTL" (spp-arg-list ("x") 1188 . 1191) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_SWPORTA_CTL_OFFSET)" 1197 . 1241)))
          ("GPIO_DEBOUNCE" (spp-arg-list ("x") 1724 . 1727) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_DEBOUNCE_OFFSET)" 1736 . 1777)))
          ("__SM_APB_GPIO_DEFS_H__")
          ("GPIO_INTTYPE_LEVEL_OFFSET" . ((number "0x38" 492 . 496)))
          ("GPIO_LS_SYNC_OFFSET" . ((number "0x60" 765 . 769)))
          ("GPIO_RAW_INTSTATUS" (spp-arg-list ("x") 1649 . 1652) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_RAW_INTSTATUS_OFFSET)" 1656 . 1702)))
          ("GPIO_SWPORTA_DR_OFFSET" . ((number "0x00" 297 . 301)))
          ("GPIO_SWPORTA_DR" (spp-arg-list ("x") 1032 . 1035) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_SWPORTA_DR_OFFSET)" 1042 . 1085)))
          ("GPIO_INTTYPE_LEVEL" (spp-arg-list ("x") 1414 . 1417) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_INTTYPE_LEVEL_OFFSET)" 1421 . 1467)))
          ("GPIO_INT_POLARITY" (spp-arg-list ("x") 1493 . 1496) . ((semantic-list "(APB_GPIO_BASE(x) + GPIO_INT_POLARITY_OFFSET)" 1501 . 1546)))
          )
)
    (semanticdb-table "sm.h"
      :major-mode 'c-mode
      :tags 
        '( ("__SYSTEM_MANAGER_H__" variable (:constant-flag t) nil [38 58])
            ("SM_ITCM_BASE" variable (:constant-flag t) nil [68 80])
            ("SM_ITCM_SIZE" variable (:constant-flag t) nil [188 200])
            ("SM_ITCM_END" variable (:constant-flag t) nil [235 246])
            ("SM_ITCM_ALIAS_SIZE" variable (:constant-flag t) nil [286 304])
            ("SM_DTCM_BASE" variable (:constant-flag t) nil [333 345])
            ("SM_DTCM_SIZE" variable (:constant-flag t) nil [366 378])
            ("SM_DTCM_END" variable (:constant-flag t) nil [406 417])
            ("SM_DTCM_ALIAS_SIZE" variable (:constant-flag t) nil [457 475])
            ("SM_APBC_BASE" variable (:constant-flag t) nil [504 516])
            ("SM_APBC_SIZE" variable (:constant-flag t) nil [537 549])
            ("SM_APBC_END" variable (:constant-flag t) nil [577 588])
            ("SM_APBC_ALIAS_SIZE" variable (:constant-flag t) nil [628 646])
            ("SM_SECM_BASE" variable (:constant-flag t) nil [674 686])
            ("SM_SECM_SIZE" variable (:constant-flag t) nil [707 719])
            ("SM_SECM_END" variable (:constant-flag t) nil [746 757])
            ("SM_SECM_ALIAS_SIZE" variable (:constant-flag t) nil [797 815])
            ("SM_WOL_BASE" variable (:constant-flag t) nil [843 854])
            ("SM_WOL_SIZE" variable (:constant-flag t) nil [875 886])
            ("SM_WOL_END" variable (:constant-flag t) nil [912 922])
            ("SM_WOL_ALIAS_SIZE" variable (:constant-flag t) nil [960 977])
            ("SM_CEC_BASE" variable (:constant-flag t) nil [1004 1015])
            ("SM_CEC_SIZE" variable (:constant-flag t) nil [1036 1047])
            ("SM_CEC_END" variable (:constant-flag t) nil [1073 1083])
            ("SM_CEC_ALIAS_SIZE" variable (:constant-flag t) nil [1121 1138])
            ("SOC_ITCM_BASE" variable (:constant-flag t) nil [1165 1178])
            ("SOC_DTCM_BASE" variable (:constant-flag t) nil [1199 1212])
            ("SOC_APBC_BASE" variable (:constant-flag t) nil [1233 1246])
            ("SOC_SECM_BASE" variable (:constant-flag t) nil [1267 1280])
            ("SOC_WOL_BASE" variable (:constant-flag t) nil [1301 1313])
            ("SOC_CEC_BASE" variable (:constant-flag t) nil [1334 1346])
            ("SOC_ITCM" variable (:constant-flag t) nil [1368 1376])
            ("SOC_DTCM" variable (:constant-flag t) nil [1438 1446])
            ("SOC_APBC" variable (:constant-flag t) nil [1508 1516])
            ("SOC_SECM" variable (:constant-flag t) nil [1578 1586])
            ("SOC_WOL" variable (:constant-flag t) nil [1648 1655])
            ("SOC_CEC" variable (:constant-flag t) nil [1716 1723])
            ("SM_APBC" variable (:constant-flag t) nil [1861 1868])
            ("MV_SM_READ_REG32" variable (:constant-flag t) nil [1966 1982])
            ("MV_SM_READ_REG8" variable (:constant-flag t) nil [2042 2057])
            ("MV_SM_WRITE_REG32" variable (:constant-flag t) nil [2115 2132])
            ("MV_SM_WRITE_REG8" variable (:constant-flag t) nil [2217 2233])
            ("SM_SM_APB_RESERVE_0" variable (:constant-flag t) nil [4615 4634])
            ("SM_SM_APB_GPIO0_BASE" variable (:constant-flag t) nil [4659 4679])
            ("SM_SM_APB_ICTL0_BASE" variable (:constant-flag t) nil [4713 4733])
            ("SM_SM_APB_ICTL1_BASE" variable (:constant-flag t) nil [4767 4787])
            ("SM_SM_APB_ICTL2_BASE" variable (:constant-flag t) nil [4821 4841])
            ("SM_SM_APB_RESERVE_5" variable (:constant-flag t) nil [4875 4894])
            ("SM_SM_APB_RESERVE_6" variable (:constant-flag t) nil [4928 4947])
            ("SM_SM_APB_RESERVE_7" variable (:constant-flag t) nil [4981 5000])
            ("SM_SM_APB_RESERVE_8" variable (:constant-flag t) nil [5034 5053])
            ("SM_SM_APB_UART0_BASE" variable (:constant-flag t) nil [5087 5107])
            ("SM_SM_APB_WDT2_BASE" variable (:constant-flag t) nil [5141 5160])
            ("SM_SM_APB_WDT0_BASE" variable (:constant-flag t) nil [5194 5213])
            ("SM_SM_APB_RESERVE_C" variable (:constant-flag t) nil [5247 5266])
            ("SM_SM_APB_WDT1_BASE" variable (:constant-flag t) nil [5300 5319])
            ("SM_SM_APB_TIMER0_BASE" variable (:constant-flag t) nil [5353 5374])
            ("SM_SM_APB_TIMER1_BASE" variable (:constant-flag t) nil [5408 5429])
            ("SM_SM_SYS_CTRL_REG_BASE" variable (:constant-flag t) nil [5463 5486])
            ("LSb32SS_SM_ICTL_IRQ_SM_WDT0" variable (:constant-flag t) nil [5510 5537])
            ("LSb32SS_SM_ICTL_IRQ_SM_WDT1" variable (:constant-flag t) nil [5551 5578])
            ("LSb32SS_SM_ICTL_IRQ_SM_WDT2" variable (:constant-flag t) nil [5592 5619])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD0" variable (:constant-flag t) nil [5633 5661])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD1" variable (:constant-flag t) nil [5675 5703])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD2" variable (:constant-flag t) nil [5717 5745])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD3" variable (:constant-flag t) nil [5759 5787])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD4" variable (:constant-flag t) nil [5801 5829])
            ("LSb32SS_SM_ICTL_IRQ_SM_UART0" variable (:constant-flag t) nil [5843 5871])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD5" variable (:constant-flag t) nil [5885 5913])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD6" variable (:constant-flag t) nil [5927 5955])
            ("LSb32SS_SM_ICTL_IRQ_SM_GPIO_A" variable (:constant-flag t) nil [5970 5999])
            ("LSb32SS_SM_ICTL_IRQ_SM_ADC" variable (:constant-flag t) nil [6014 6040])
            ("LSb32SS_SM_ICTL_IRQ_SOC2SM_SW" variable (:constant-flag t) nil [6055 6084])
            ("LSb32SS_SM_ICTL_IRQ_SM_TSEN" variable (:constant-flag t) nil [6099 6126])
            ("LSb32SS_SM_ICTL_IRQ_SM_WOL" variable (:constant-flag t) nil [6141 6167])
            ("LSb32SS_SM_ICTL_IRQ_SM_CEC" variable (:constant-flag t) nil [6182 6208])
            ("LSb32SS_SM_ICTL_IRQ_SM_CEC_FIFO" variable (:constant-flag t) nil [6223 6254])
            ("LSb32SS_SM_ICTL_IRQ_SM_ETH" variable (:constant-flag t) nil [6269 6295])
            ("LSb32SS_SM_ICTL_IRQ_SM_HPD" variable (:constant-flag t) nil [6310 6336])
            ("LSb32SS_SM_ICTL_IRQ_SM_IHPD" variable (:constant-flag t) nil [6351 6378])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_0" variable (:constant-flag t) nil [6393 6424])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_1" variable (:constant-flag t) nil [6439 6470])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_2" variable (:constant-flag t) nil [6485 6516])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_3" variable (:constant-flag t) nil [6531 6562])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_4" variable (:constant-flag t) nil [6577 6608])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_5" variable (:constant-flag t) nil [6623 6654])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_6" variable (:constant-flag t) nil [6669 6700])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_7" variable (:constant-flag t) nil [6715 6746])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_0" variable (:constant-flag t) nil [6761 6792])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_1" variable (:constant-flag t) nil [6807 6838])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_2" variable (:constant-flag t) nil [6853 6884])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_3" variable (:constant-flag t) nil [6899 6930])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_4" variable (:constant-flag t) nil [6945 6976])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_5" variable (:constant-flag t) nil [6991 7022])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_6" variable (:constant-flag t) nil [7037 7068])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_7" variable (:constant-flag t) nil [7083 7114])
            ("SM_DTCM_SHARED_DATA_SIZE" variable (:constant-flag t) nil [10050 10074])
            ("SM_DTCM_SHARED_DATA_ADDR" variable (:constant-flag t) nil [10094 10118])
            ("SM_PINMUX_TABLE_OFFSET" variable (:constant-flag t) nil [10194 10216])
            ("SM_PINMUX_TABLE_SIZE" variable (:constant-flag t) nil [10259 10279])
            ("SM_CPU0_INPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10304 10328])
            ("SM_CPU1_INPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10378 10402])
            ("SM_CPU0_OUTPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10472 10497])
            ("SM_CPU1_OUTPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10547 10572])
            ("MSG_LINUX_2_SM" type
               (:typedef ("" type
                     (:members 
                        ( ("MV_SM_POWER_LOWPOWERSTANDBY_REQUEST" variable
                             (:constant-flag t
                              :default-value (10829 10833)
                              :type "int")
                              (reparse-symbol enumsubparts) [10791 10833])
                          ("MV_SM_POWER_NORMALSTANDBY_REQUEST" variable
                             (:constant-flag t
                              :default-value (10872 10876)
                              :type "int")
                              (reparse-symbol enumsubparts) [10836 10876])
                          ("MV_SM_POWER_STANDBY_REQUEST" variable
                             (:constant-flag t
                              :default-value (10909 10910)
                              :type "int")
                              (reparse-symbol enumsubparts) [10879 10910])
                          ("MV_SM_POWER_SUSPEND_REQUEST" variable
                             (:constant-flag t
                              :default-value (10974 10975)
                              :type "int")
                              (reparse-symbol enumsubparts) [10944 10975])
                          ("MV_SM_POWER_BOOTUP_SOURCE_REQUEST" variable
                             (:constant-flag t
                              :default-value (11047 11051)
                              :type "int")
                              (reparse-symbol enumsubparts) [11011 11051])
                          ("MV_SM_POWER_CAST_WAKEUP_SM_REQUEST" variable
                             (:constant-flag t
                              :default-value (11091 11095)
                              :type "int")
                              (reparse-symbol enumsubparts) [11054 11095])
                          ("MV_SM_POWER_WIFI_WAKEUP_SM_REQUEST" variable
                             (:constant-flag t
                              :default-value (11142 11146)
                              :type "int")
                              (reparse-symbol enumsubparts) [11105 11146])
                          ("MV_SM_POWER_SYS_RESET" variable
                             (:constant-flag t
                              :default-value (11174 11178)
                              :type "int")
                              (reparse-symbol enumsubparts) [11150 11178]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [10775 11196])
            ("MSG_BOOTLOADER_2_SM" type
               (:typedef ("" type
                     (:members 
                        ( ("MV_SM_ACTIVE_2_LOWPOWERSTANDBY_RESP" variable
                             (:constant-flag t
                              :default-value (11282 11283)
                              :type "int")
                              (reparse-symbol enumsubparts) [11244 11283])
                          ("MV_SM_ACTIVE_2_NORMALSTANDBY_RESP" variable
                             (:constant-flag t
                              :default-value (11322 11323)
                              :type "int")
                              (reparse-symbol enumsubparts) [11286 11323])
                          ("MV_SM_ACTIVE_2_SUSPEND_RESP" variable
                             (:constant-flag t
                              :default-value (11386 11390)
                              :type "int")
                              (reparse-symbol enumsubparts) [11356 11390])
                          ("MV_SM_COLD_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11452 11453)
                              :type "int")
                              (reparse-symbol enumsubparts) [11425 11453])
                          ("MV_SM_LOWPOWERSTANDBY_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11523 11527)
                              :type "int")
                              (reparse-symbol enumsubparts) [11485 11527])
                          ("MV_SM_NORMALSTANDBY_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11566 11567)
                              :type "int")
                              (reparse-symbol enumsubparts) [11530 11567])
                          ("MV_SM_SUSPEND_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11638 11639)
                              :type "int")
                              (reparse-symbol enumsubparts) [11608 11639]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11228 11691])
            ("save_irq" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11740 11745]))                  
                :type "unsigned long")
                nil [11710 11746])
            ("restore_irq" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :arguments 
                  ( ("flags" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [11771 11791]))                  
                :type "void")
                nil [11747 11792])
            ("local_irq_save" variable (:constant-flag t) nil [11802 11816])
            ("local_irq_restore" variable (:constant-flag t) nil [11884 11901]))          
      :file "sm.h"
      :pointmax 11994
      :fsize 11993
      :lastmodtime '(22220 13434 27102 109000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SM_SM_APB_ICTL2_BASE" . ((semantic-list "(SM_APBC_BASE + 0x4000)" 4843 . 4866)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WDT2" . ((number "2" 5623 . 5624)))
          ("LSb32SS_SM_ICTL_IRQ_SM_ADC" . ((number "12" 6044 . 6046)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_2" . ((number "23" 6520 . 6522)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_6" . ((number "35" 7072 . 7074)))
          ("local_irq_restore" (spp-arg-list ("flags") 11901 . 11908) . 
              ((DO "do" 11912 . 11914) (semantic-list "{				\\
		restore_irq(flags);	\\
	}" 11915 . 11948) (WHILE "while" 11949 . 11954) (semantic-list "(0)" 11955 . 11958)))
          ("SM_SECM_ALIAS_SIZE" . ((number "0x00010000" 816 . 826)))
          ("SM_WOL_BASE" . ((number "0x10010000" 856 . 866)))
          ("SOC_SECM" (spp-arg-list ("addr") 1586 . 1594) . ((semantic-list "( (int)addr - SM_SECM_BASE + SOC_SECM_BASE )" 1595 . 1639)))
          ("SM_SM_APB_RESERVE_0" . ((semantic-list "(SM_APBC_BASE)" 4636 . 4650)))
          ("SM_SM_APB_WDT1_BASE" . ((semantic-list "(SM_APBC_BASE + 0xD000)" 5321 . 5344)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_3" . ((number "24" 6566 . 6568)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_7" . ((number "36" 7118 . 7120)))
          ("SM_CPU0_INPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 4 )" 10329 . 10369)))
          ("SM_DTCM_ALIAS_SIZE" . ((number "0x00020000" 476 . 486)))
          ("SM_APBC_ALIAS_SIZE" . ((number "0x00010000" 647 . 657)))
          ("SOC_SECM_BASE" . ((number "0xf7fd0000" 1282 . 1292)))
          ("SOC_WOL" (spp-arg-list ("addr") 1655 . 1663) . ((semantic-list "( (int)addr - SM_WOL_BASE + SOC_WOL_BASE )" 1665 . 1707)))
          ("SM_SM_APB_GPIO0_BASE" . ((semantic-list "(SM_APBC_BASE + 0x1000)" 4681 . 4704)))
          ("LSb32SS_SM_ICTL_IRQ_SM_IHPD" . ((number "20" 6382 . 6384)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_4" . ((number "25" 6612 . 6614)))
          ("SM_PINMUX_TABLE_SIZE" . ((number "128" 10291 . 10294)))
          ("SM_CPU1_OUTPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 1 )" 10573 . 10613)))
          ("SM_CEC_ALIAS_SIZE" . ((number "0x00001000" 1139 . 1149)))
          ("SOC_DTCM_BASE" . ((number "0xf7fa0000" 1214 . 1224)))
          ("SOC_APBC_BASE" . ((number "0xf7fc0000" 1248 . 1258)))
          ("SOC_CEC_BASE" . ((number "0xf7fe1000" 1348 . 1358)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD0" . ((number "3" 5665 . 5666)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_5" . ((number "26" 6658 . 6660)))
          ("SM_SECM_SIZE" . ((number "0x00010000" 721 . 731)))
          ("SM_CEC_END" . ((semantic-list "(SM_CEC_BASE + SM_CEC_SIZE)" 1085 . 1112)))
          ("SOC_DTCM" (spp-arg-list ("addr") 1446 . 1454) . ((semantic-list "( (int)addr - SM_DTCM_BASE + SOC_DTCM_BASE )" 1455 . 1499)))
          ("SOC_APBC" (spp-arg-list ("addr") 1516 . 1524) . ((semantic-list "( (int)addr - SM_APBC_BASE + SOC_APBC_BASE )" 1525 . 1569)))
          ("SOC_CEC" (spp-arg-list ("addr") 1723 . 1731) . ((semantic-list "( (int)addr - SM_CEC_BASE + SOC_CEC_BASE )" 1733 . 1775)))
          ("MV_SM_READ_REG32" (spp-arg-list ("reg") 1982 . 1989) . ((semantic-list "( *( (volatile  UINT32*)SM_APBC( reg ) ) )" 1991 . 2033)))
          ("SM_SM_APB_ICTL1_BASE" . ((semantic-list "(SM_APBC_BASE + 0x3000)" 4789 . 4812)))
          ("SM_SM_APB_UART0_BASE" . ((semantic-list "(SM_APBC_BASE + 0x9000)" 5109 . 5132)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD1" . ((number "4" 5707 . 5708)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_6" . ((number "27" 6704 . 6706)))
          ("SM_CPU1_INPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 3 )" 10403 . 10443)))
          ("SM_ITCM_BASE" . ((number "0x00000000" 82 . 92)))
          ("SM_DTCM_SIZE" . ((number "0x00004000" 380 . 390)))
          ("SM_APBC_SIZE" . ((number "0x00010000" 551 . 561)))
          ("SM_APBC" (spp-arg-list ("reg") 1868 . 1875) . ((semantic-list "( (INT32)(reg) - SM_APBC_BASE + SOC_APBC_BASE )" 1884 . 1931)))
          ("SM_SM_APB_WDT0_BASE" . ((semantic-list "(SM_APBC_BASE + 0xB000)" 5215 . 5238)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD2" . ((number "5" 5749 . 5750)))
          ("LSb32SS_SM_ICTL_IRQ_SOC2SM_SW" . ((number "13" 6088 . 6090)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_7" . ((number "28" 6750 . 6752)))
          ("SM_DTCM_END" . ((semantic-list "(SM_DTCM_BASE + SM_DTCM_SIZE)" 419 . 448)))
          ("SM_APBC_END" . ((semantic-list "(SM_APBC_BASE + SM_APBC_SIZE)" 590 . 619)))
          ("SM_CEC_BASE" . ((number "0x10011000" 1017 . 1027)))
          ("MV_SM_READ_REG8" (spp-arg-list ("reg") 2057 . 2064) . ((semantic-list "( *( (volatile UCHAR*)SM_APBC( reg ) ) )" 2066 . 2106)))
          ("MV_SM_WRITE_REG8" (spp-arg-list ("reg" "value") 2233 . 2247) . ((semantic-list "( *( (volatile UCHAR*)SM_APBC( reg ) ) = (UCHAR)( value ) )" 2248 . 2307)))
          ("SM_SM_APB_RESERVE_5" . ((semantic-list "(SM_APBC_BASE + 0x5000)" 4896 . 4919)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD3" . ((number "6" 5791 . 5792)))
          ("LSb32SS_SM_ICTL_IRQ_SM_UART0" . ((number "8" 5875 . 5876)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WOL" . ((number "15" 6171 . 6173)))
          ("SM_DTCM_SHARED_DATA_SIZE" . ((number "512" 10082 . 10085)))
          ("SM_CPU0_OUTPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 2 )" 10498 . 10538)))
          ("SM_WOL_SIZE" . ((number "0x00001000" 888 . 898)))
          ("SM_SM_APB_RESERVE_6" . ((semantic-list "(SM_APBC_BASE + 0x6000)" 4949 . 4972)))
          ("SM_SM_APB_RESERVE_C" . ((semantic-list "(SM_APBC_BASE + 0xC000)" 5268 . 5291)))
          ("SM_SM_APB_TIMER1_BASE" . ((semantic-list "(SM_APBC_BASE + 0xF000)" 5431 . 5454)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD4" . ((number "7" 5833 . 5834)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_0" . ((number "29" 6796 . 6798)))
          ("SM_DTCM_SHARED_DATA_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 4 - SM_DTCM_SHARED_DATA_SIZE)" 10119 . 10185)))
          ("SM_PINMUX_TABLE_OFFSET" . ((symbol "SM_DTCM_SHARED_DATA_ADDR" 10226 . 10250)))
          ("SM_ITCM_END" . ((semantic-list "(SM_ITCM_BASE + SM_ITCM_SIZE)" 248 . 277)))
          ("SM_ITCM_ALIAS_SIZE" . ((number "0x00020000" 305 . 315)))
          ("SM_SM_APB_ICTL0_BASE" . ((semantic-list "(SM_APBC_BASE + 0x2000)" 4735 . 4758)))
          ("SM_SM_APB_RESERVE_7" . ((semantic-list "(SM_APBC_BASE + 0x7000)" 5002 . 5025)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD5" . ((number "9" 5917 . 5918)))
          ("LSb32SS_SM_ICTL_IRQ_SM_GPIO_A" . ((number "11" 6003 . 6005)))
          ("LSb32SS_SM_ICTL_IRQ_SM_CEC" . ((number "16" 6212 . 6214)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_1" . ((number "30" 6842 . 6844)))
          ("local_irq_save" (spp-arg-list ("flags") 11816 . 11823) . 
              ((DO "do" 11828 . 11830) (semantic-list "{				\\
		flags = save_irq();	\\
	}" 11831 . 11864) (WHILE "while" 11865 . 11870) (semantic-list "(0)" 11871 . 11874)))
          ("SOC_ITCM_BASE" . ((number "0xf7f80000" 1180 . 1190)))
          ("SOC_ITCM" (spp-arg-list ("addr") 1376 . 1384) . ((semantic-list "( (int)addr - SM_ITCM_BASE + SOC_ITCM_BASE )" 1385 . 1429)))
          ("SM_SM_APB_RESERVE_8" . ((semantic-list "(SM_APBC_BASE + 0x8000)" 5055 . 5078)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD6" . ((number "10" 5959 . 5961)))
          ("LSb32SS_SM_ICTL_IRQ_SM_CEC_FIFO" . ((number "17" 6258 . 6260)))
          ("LSb32SS_SM_ICTL_IRQ_SM_HPD" . ((number "19" 6340 . 6342)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_2" . ((number "31" 6888 . 6890)))
          ("__SYSTEM_MANAGER_H__")
          ("SM_SECM_END" . ((semantic-list "(SM_SECM_BASE + SM_SECM_SIZE)" 759 . 788)))
          ("MV_SM_WRITE_REG32" (spp-arg-list ("reg" "value") 2132 . 2146) . ((semantic-list "( *( (volatile UINT32*)SM_APBC( reg ) ) = (UINT32)( value ) )" 2147 . 2208)))
          ("SM_SM_APB_WDT2_BASE" . ((semantic-list "(SM_APBC_BASE + 0xA000)" 5162 . 5185)))
          ("SM_SM_SYS_CTRL_REG_BASE" . ((semantic-list "(0x10012000)" 5488 . 5500)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_3" . ((number "32" 6934 . 6936)))
          ("SM_ITCM_SIZE" . ((number "0x00006800" 202 . 212)))
          ("SM_SECM_BASE" . ((number "0x40000000" 688 . 698)))
          ("SM_WOL_END" . ((semantic-list "(SM_WOL_BASE + SM_WOL_SIZE)" 924 . 951)))
          ("SM_WOL_ALIAS_SIZE" . ((number "0x00001000" 978 . 988)))
          ("SOC_WOL_BASE" . ((number "0xf7fe0000" 1315 . 1325)))
          ("SM_SM_APB_TIMER0_BASE" . ((semantic-list "(SM_APBC_BASE + 0xE000)" 5376 . 5399)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WDT0" . ((number "0" 5541 . 5542)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TSEN" . ((number "14" 6130 . 6132)))
          ("LSb32SS_SM_ICTL_IRQ_SM_ETH" . ((number "18" 6299 . 6301)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_0" . ((number "21" 6428 . 6430)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_4" . ((number "33" 6980 . 6982)))
          ("SM_DTCM_BASE" . ((number "0x04000000" 347 . 357)))
          ("SM_APBC_BASE" . ((number "0x10000000" 518 . 528)))
          ("SM_CEC_SIZE" . ((number "0x00001000" 1049 . 1059)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WDT1" . ((number "1" 5582 . 5583)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_1" . ((number "22" 6474 . 6476)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_5" . ((number "34" 7026 . 7028)))
          )
))
  :file "!home!qichen!20160223_rc1!vendor!marvell-sdk!MV88DE3100_SDK!MV88DE3100_Tools!bsp!sm_rom!core!include!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
