;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("precomp.hpp" include nil nil [2158 2180])
            ("NO_OPENGL_SUPPORT_ERROR" variable (:constant-flag t) nil [2322 2345])
            ("cv" using (:type ("cv" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2452 2471])
            ("cv::cuda" using (:type ("cv::cuda" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2472 2497])
            ("unnamed" type
               (:members 
                  ( ("throw_no_ogl" function
                       (:typemodifiers ("inline")
                        :type "void")
                        (reparse-symbol namespacesubparts) [2543 2664])
                    ("CV_CheckGlError" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3808 3823]))                  
                :type "namespace")
                nil [2499 3885])
            ("setGlDevice" function
               (:parent "cv::cuda"
                :arguments 
                  ( ("device" variable (:type "int") (reparse-symbol arg-sub-list) [4183 4194]))                  
                :type "void")
                nil [4156 4412])
            ("Impl" type
               (:parent "cv::ogl::Buffer"
                :type "class")
                nil [8572 8604])
            ("Buffer" function
               (:constructor-flag t
                :parent "cv::ogl::Buffer"
                :type ("Buffer" type (:type "class") nil nil))
                nil [12537 12677])
            ("Buffer" function
               (:constructor-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arows" variable (:type "int") (reparse-symbol arg-sub-list) [12703 12713])
                    ("acols" variable (:type "int") (reparse-symbol arg-sub-list) [12714 12724])
                    ("atype" variable (:type "int") (reparse-symbol arg-sub-list) [12725 12735])
                    ("abufId" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12736 12756])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [12757 12774]))                  
                :type ("Buffer" type (:type "class") nil nil))
                nil [12679 13064])
            ("Buffer" function
               (:constructor-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("asize" variable (:type ("Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13090 13101])
                    ("atype" variable (:type "int") (reparse-symbol arg-sub-list) [13102 13112])
                    ("abufId" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [13113 13133])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [13134 13151]))                  
                :type ("Buffer" type (:type "class") nil nil))
                nil [13066 13436])
            ("Buffer" function
               (:constructor-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arr" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13462 13477])
                    ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13478 13492])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [13493 13510]))                  
                :type ("Buffer" type (:type "class") nil nil))
                nil [13438 14227])
            ("create" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arows" variable (:type "int") (reparse-symbol arg-sub-list) [14258 14268])
                    ("acols" variable (:type "int") (reparse-symbol arg-sub-list) [14269 14279])
                    ("atype" variable (:type "int") (reparse-symbol arg-sub-list) [14280 14290])
                    ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14291 14305])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [14306 14323]))                  
                :type "void")
                nil [14229 14750])
            ("release" function
               (:parent "cv::ogl::Buffer"
                :type "void")
                nil [14752 14937])
            ("setAutoRelease" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("flag" variable (:type "bool") (reparse-symbol arg-sub-list) [14976 14986]))                  
                :type "void")
                nil [14939 15093])
            ("copyFrom" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arr" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15126 15141])
                    ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15142 15156])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [15157 15174]))                  
                :type "void")
                nil [15095 16184])
            ("copyFrom" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arr" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16217 16232])
                    ("stream" variable
                       (:reference 1
                        :type ("cuda::Stream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16233 16254])
                    ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16255 16269])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [16270 16287]))                  
                :type "void")
                nil [16186 16816])
            ("copyTo" function
               (:methodconst-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arr" variable (:type ("OutputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16847 16863]))                  
                :type "void")
                nil [16818 17739])
            ("copyTo" function
               (:methodconst-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("arr" variable (:type ("OutputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17770 17786])
                    ("stream" variable
                       (:reference 1
                        :type ("cuda::Stream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17787 17808]))                  
                :type "void")
                nil [17741 18223])
            ("clone" function
               (:methodconst-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18264 18278])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [18279 18296]))                  
                :type ("cv::ogl::Buffer" type (:type "class") nil nil))
                nil [18225 18515])
            ("bind" function
               (:methodconst-flag t
                :parent "cv::ogl::Buffer"
                :arguments 
                  ( ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18544 18558]))                  
                :type "void")
                nil [18517 18665])
            ("unbind" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("target" variable (:type ("Target" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18696 18710]))                  
                :type "void")
                nil [18667 18840])
            ("mapHost" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("access" variable (:type ("Access" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18871 18885]))                  
                :type ("Mat" type (:type "class") nil nil))
                nil [18842 19040])
            ("unmapHost" function
               (:parent "cv::ogl::Buffer"
                :type "void")
                nil [19042 19163])
            ("mapDevice" function
               (:parent "cv::ogl::Buffer"
                :type ("GpuMat" type (:type "class") nil nil))
                nil [19165 19435])
            ("unmapDevice" function
               (:parent "cv::ogl::Buffer"
                :type "void")
                nil [19437 19627])
            ("mapDevice" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("cuda::Stream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19669 19690]))                  
                :type ("cuda::GpuMat" type (:type "class") nil nil))
                nil [19629 20006])
            ("unmapDevice" function
               (:parent "cv::ogl::Buffer"
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("cuda::Stream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20042 20063]))                  
                :type "void")
                nil [20008 20299])
            ("bufId" function
               (:methodconst-flag t
                :parent "cv::ogl::Buffer"
                :type "unsigned int")
                nil [20301 20442])
            ("Impl" type
               (:parent "cv::ogl::Texture2D"
                :type "class")
                nil [20574 20609])
            ("Texture2D" function
               (:constructor-flag t
                :parent "cv::ogl::Texture2D"
                :type ("Texture2D" type (:type "class") nil nil))
                nil [23215 23366])
            ("Texture2D" function
               (:constructor-flag t
                :parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("arows" variable (:type "int") (reparse-symbol arg-sub-list) [23398 23408])
                    ("acols" variable (:type "int") (reparse-symbol arg-sub-list) [23409 23419])
                    ("aformat" variable (:type ("Format" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23420 23435])
                    ("atexId" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [23436 23456])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [23457 23474]))                  
                :type ("Texture2D" type (:type "class") nil nil))
                nil [23368 23775])
            ("Texture2D" function
               (:constructor-flag t
                :parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("asize" variable (:type ("Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23807 23818])
                    ("aformat" variable (:type ("Format" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23819 23834])
                    ("atexId" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [23835 23855])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [23856 23873]))                  
                :type ("Texture2D" type (:type "class") nil nil))
                nil [23777 24169])
            ("Texture2D" function
               (:constructor-flag t
                :parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("arr" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24201 24216])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [24217 24234]))                  
                :type ("Texture2D" type (:type "class") nil nil))
                nil [24171 26275])
            ("create" function
               (:parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("arows" variable (:type "int") (reparse-symbol arg-sub-list) [26309 26319])
                    ("acols" variable (:type "int") (reparse-symbol arg-sub-list) [26320 26330])
                    ("aformat" variable (:type ("Format" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26331 26346])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [26347 26364]))                  
                :type "void")
                nil [26277 26803])
            ("release" function
               (:parent "cv::ogl::Texture2D"
                :type "void")
                nil [26805 26998])
            ("setAutoRelease" function
               (:parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("flag" variable (:type "bool") (reparse-symbol arg-sub-list) [27040 27050]))                  
                :type "void")
                nil [27000 27157])
            ("copyFrom" function
               (:parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("arr" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27193 27208])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [27209 27226]))                  
                :type "void")
                nil [27159 29058])
            ("copyTo" function
               (:methodconst-flag t
                :parent "cv::ogl::Texture2D"
                :arguments 
                  ( ("arr" variable (:type ("OutputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29092 29108])
                    ("ddepth" variable (:type "int") (reparse-symbol arg-sub-list) [29109 29120])
                    ("autoRelease" variable (:type "bool") (reparse-symbol arg-sub-list) [29121 29138]))                  
                :type "void")
                nil [29060 30790])
            ("bind" function
               (:methodconst-flag t
                :parent "cv::ogl::Texture2D"
                :type "void")
                nil [30792 30905])
            ("texId" function
               (:methodconst-flag t
                :parent "cv::ogl::Texture2D"
                :type "unsigned int")
                nil [30907 31051])
            ("setVertexArray" function
               (:parent "cv::ogl::Arrays"
                :arguments 
                  ( ("vertex" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31180 31198]))                  
                :type "void")
                nil [31143 31592])
            ("resetVertexArray" function
               (:parent "cv::ogl::Arrays"
                :type "void")
                nil [31594 31676])
            ("setColorArray" function
               (:parent "cv::ogl::Arrays"
                :arguments 
                  ( ("color" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31714 31731]))                  
                :type "void")
                nil [31678 31943])
            ("resetColorArray" function
               (:parent "cv::ogl::Arrays"
                :type "void")
                nil [31945 32010])
            ("setNormalArray" function
               (:parent "cv::ogl::Arrays"
                :arguments 
                  ( ("normal" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32049 32067]))                  
                :type "void")
                nil [32012 32421])
            ("resetNormalArray" function
               (:parent "cv::ogl::Arrays"
                :type "void")
                nil [32423 32490])
            ("setTexCoordArray" function
               (:parent "cv::ogl::Arrays"
                :arguments 
                  ( ("texCoord" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32531 32551]))                  
                :type "void")
                nil [32492 32912])
            ("resetTexCoordArray" function
               (:parent "cv::ogl::Arrays"
                :type "void")
                nil [32914 32985])
            ("release" function
               (:parent "cv::ogl::Arrays"
                :type "void")
                nil [32987 33119])
            ("setAutoRelease" function
               (:parent "cv::ogl::Arrays"
                :arguments 
                  ( ("flag" variable (:type "bool") (reparse-symbol arg-sub-list) [33158 33168]))                  
                :type "void")
                nil [33121 33309])
            ("bind" function
               (:methodconst-flag t
                :parent "cv::ogl::Arrays"
                :type "void")
                nil [33311 35166])
            ("render" function
               (:parent "cv::ogl"
                :arguments 
                  ( ("tex" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ogl::Texture2D" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35276 35302])
                    ("wndRect" variable (:type ("Rect_" type
                         (:template-specifier 
                            ( ("double" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [35303 35325])
                    ("texRect" variable (:type ("Rect_" type
                         (:template-specifier 
                            ( ("double" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [35326 35348]))                  
                :type "void")
                nil [35255 37208])
            ("render" function
               (:parent "cv::ogl"
                :arguments 
                  ( ("arr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ogl::Arrays" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37231 37254])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [37255 37264])
                    ("color" variable (:type ("Scalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37265 37278]))                  
                :type "void")
                nil [37210 37562])
            ("render" function
               (:parent "cv::ogl"
                :arguments 
                  ( ("arr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ogl::Arrays" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37585 37608])
                    ("indices" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37609 37628])
                    ("mode" variable (:type "int") (reparse-symbol arg-sub-list) [37629 37638])
                    ("color" variable (:type ("Scalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37639 37652]))                  
                :type "void")
                nil [37564 39481])
            ("NO_OPENCL_SUPPORT_ERROR" variable (:constant-flag t) nil [39905 39928])
            ("cv" type
               (:members 
                  ( ("ogl" type
                       (:members 
                          ( ("ocl" type
                               (:members 
                                  ( ("initializeContextFromGL" function (:type ("Context" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [40240 43864]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [40223 43867])
                            ("convertToGLTexture2D" function
                               (:arguments 
                                  ( ("src" variable (:type ("InputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43921 43936])
                                    ("texture" variable
                                       (:reference 1
                                        :type ("Texture2D" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43937 43956]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [43895 45997])
                            ("convertFromGLTexture2D" function
                               (:arguments 
                                  ( ("texture" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Texture2D" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [46027 46052])
                                    ("dst" variable (:type ("OutputArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46053 46069]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [45999 48290])
                            ("mapGLBuffer" function
                               (:arguments 
                                  ( ("buffer" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Buffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48378 48399])
                                    ("accessFlags" variable (:type "int") (reparse-symbol arg-sub-list) [48400 48416]))                                  
                                :type ("UMat" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [48361 49896])
                            ("unmapGLBuffer" function
                               (:arguments 
                                  ( ("u" variable
                                       (:reference 1
                                        :type ("UMat" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49917 49925]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [49898 50824]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [40206 50827]))                  
                :type "namespace")
                nil [40191 50828]))          
      :file "opengl.cpp"
      :pointmax 50850
      :fsize 50849
      :lastmodtime '(22621 7828 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("CV_CheckGlError" (spp-arg-list nil 3823 . 3825) . ((symbol "CV_DbgAssert" 3826 . 3838) (semantic-list "( (checkError(__FILE__, __LINE__, CV_Func)) )" 3838 . 3883)))
          ("NO_OPENCL_SUPPORT_ERROR" . ((symbol "CV_ErrorNoReturn" 39929 . 39945) (semantic-list "(cv::Error::StsBadFunc, \"OpenCV was build without OpenCL support\")" 39945 . 40011)))
          ("NO_OPENGL_SUPPORT_ERROR" . ((symbol "CV_ErrorNoReturn" 2346 . 2362) (semantic-list "(cv::Error::StsBadFunc, \"OpenCV was build without OpenGL support\")" 2362 . 2428)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "precomp.hpp"
      :fsize 10497
      :lastmodtime '(22621 7828 0 0)))
  :file "!home!chenqi!Downloads!opencv-3.2.0!modules!core!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
