;; Object include/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "include/"
  :tables
  (list
    (semanticdb-table "sm.h"
      :major-mode 'c-mode
      :tags 
        '( ("__SYSTEM_MANAGER_H__" variable (:constant-flag t) nil [38 58])
            ("SM_ITCM_BASE" variable (:constant-flag t) nil [68 80])
            ("SM_ITCM_SIZE" variable (:constant-flag t) nil [188 200])
            ("SM_ITCM_END" variable (:constant-flag t) nil [235 246])
            ("SM_ITCM_ALIAS_SIZE" variable (:constant-flag t) nil [286 304])
            ("SM_DTCM_BASE" variable (:constant-flag t) nil [333 345])
            ("SM_DTCM_SIZE" variable (:constant-flag t) nil [366 378])
            ("SM_DTCM_END" variable (:constant-flag t) nil [406 417])
            ("SM_DTCM_ALIAS_SIZE" variable (:constant-flag t) nil [457 475])
            ("SM_APBC_BASE" variable (:constant-flag t) nil [504 516])
            ("SM_APBC_SIZE" variable (:constant-flag t) nil [537 549])
            ("SM_APBC_END" variable (:constant-flag t) nil [577 588])
            ("SM_APBC_ALIAS_SIZE" variable (:constant-flag t) nil [628 646])
            ("SM_SECM_BASE" variable (:constant-flag t) nil [674 686])
            ("SM_SECM_SIZE" variable (:constant-flag t) nil [707 719])
            ("SM_SECM_END" variable (:constant-flag t) nil [746 757])
            ("SM_SECM_ALIAS_SIZE" variable (:constant-flag t) nil [797 815])
            ("SM_WOL_BASE" variable (:constant-flag t) nil [843 854])
            ("SM_WOL_SIZE" variable (:constant-flag t) nil [875 886])
            ("SM_WOL_END" variable (:constant-flag t) nil [912 922])
            ("SM_WOL_ALIAS_SIZE" variable (:constant-flag t) nil [960 977])
            ("SM_CEC_BASE" variable (:constant-flag t) nil [1004 1015])
            ("SM_CEC_SIZE" variable (:constant-flag t) nil [1036 1047])
            ("SM_CEC_END" variable (:constant-flag t) nil [1073 1083])
            ("SM_CEC_ALIAS_SIZE" variable (:constant-flag t) nil [1121 1138])
            ("SOC_ITCM_BASE" variable (:constant-flag t) nil [1165 1178])
            ("SOC_DTCM_BASE" variable (:constant-flag t) nil [1199 1212])
            ("SOC_APBC_BASE" variable (:constant-flag t) nil [1233 1246])
            ("SOC_SECM_BASE" variable (:constant-flag t) nil [1267 1280])
            ("SOC_WOL_BASE" variable (:constant-flag t) nil [1301 1313])
            ("SOC_CEC_BASE" variable (:constant-flag t) nil [1334 1346])
            ("SOC_ITCM" variable (:constant-flag t) nil [1368 1376])
            ("SOC_DTCM" variable (:constant-flag t) nil [1438 1446])
            ("SOC_APBC" variable (:constant-flag t) nil [1508 1516])
            ("SOC_SECM" variable (:constant-flag t) nil [1578 1586])
            ("SOC_WOL" variable (:constant-flag t) nil [1648 1655])
            ("SOC_CEC" variable (:constant-flag t) nil [1716 1723])
            ("SM_APBC" variable (:constant-flag t) nil [1861 1868])
            ("MV_SM_READ_REG32" variable (:constant-flag t) nil [1966 1982])
            ("MV_SM_READ_REG8" variable (:constant-flag t) nil [2042 2057])
            ("MV_SM_WRITE_REG32" variable (:constant-flag t) nil [2115 2132])
            ("MV_SM_WRITE_REG8" variable (:constant-flag t) nil [2217 2233])
            ("SM_SM_APB_RESERVE_0" variable (:constant-flag t) nil [4615 4634])
            ("SM_SM_APB_GPIO0_BASE" variable (:constant-flag t) nil [4659 4679])
            ("SM_SM_APB_ICTL0_BASE" variable (:constant-flag t) nil [4713 4733])
            ("SM_SM_APB_ICTL1_BASE" variable (:constant-flag t) nil [4767 4787])
            ("SM_SM_APB_ICTL2_BASE" variable (:constant-flag t) nil [4821 4841])
            ("SM_SM_APB_RESERVE_5" variable (:constant-flag t) nil [4875 4894])
            ("SM_SM_APB_RESERVE_6" variable (:constant-flag t) nil [4928 4947])
            ("SM_SM_APB_RESERVE_7" variable (:constant-flag t) nil [4981 5000])
            ("SM_SM_APB_RESERVE_8" variable (:constant-flag t) nil [5034 5053])
            ("SM_SM_APB_UART0_BASE" variable (:constant-flag t) nil [5087 5107])
            ("SM_SM_APB_WDT2_BASE" variable (:constant-flag t) nil [5141 5160])
            ("SM_SM_APB_WDT0_BASE" variable (:constant-flag t) nil [5194 5213])
            ("SM_SM_APB_RESERVE_C" variable (:constant-flag t) nil [5247 5266])
            ("SM_SM_APB_WDT1_BASE" variable (:constant-flag t) nil [5300 5319])
            ("SM_SM_APB_TIMER0_BASE" variable (:constant-flag t) nil [5353 5374])
            ("SM_SM_APB_TIMER1_BASE" variable (:constant-flag t) nil [5408 5429])
            ("SM_SM_SYS_CTRL_REG_BASE" variable (:constant-flag t) nil [5463 5486])
            ("LSb32SS_SM_ICTL_IRQ_SM_WDT0" variable (:constant-flag t) nil [5510 5537])
            ("LSb32SS_SM_ICTL_IRQ_SM_WDT1" variable (:constant-flag t) nil [5551 5578])
            ("LSb32SS_SM_ICTL_IRQ_SM_WDT2" variable (:constant-flag t) nil [5592 5619])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD0" variable (:constant-flag t) nil [5633 5661])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD1" variable (:constant-flag t) nil [5675 5703])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD2" variable (:constant-flag t) nil [5717 5745])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD3" variable (:constant-flag t) nil [5759 5787])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD4" variable (:constant-flag t) nil [5801 5829])
            ("LSb32SS_SM_ICTL_IRQ_SM_UART0" variable (:constant-flag t) nil [5843 5871])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD5" variable (:constant-flag t) nil [5885 5913])
            ("LSb32SS_SM_ICTL_IRQ_SM_RSVD6" variable (:constant-flag t) nil [5927 5955])
            ("LSb32SS_SM_ICTL_IRQ_SM_GPIO_A" variable (:constant-flag t) nil [5970 5999])
            ("LSb32SS_SM_ICTL_IRQ_SM_ADC" variable (:constant-flag t) nil [6014 6040])
            ("LSb32SS_SM_ICTL_IRQ_SOC2SM_SW" variable (:constant-flag t) nil [6055 6084])
            ("LSb32SS_SM_ICTL_IRQ_SM_TSEN" variable (:constant-flag t) nil [6099 6126])
            ("LSb32SS_SM_ICTL_IRQ_SM_WOL" variable (:constant-flag t) nil [6141 6167])
            ("LSb32SS_SM_ICTL_IRQ_SM_CEC" variable (:constant-flag t) nil [6182 6208])
            ("LSb32SS_SM_ICTL_IRQ_SM_CEC_FIFO" variable (:constant-flag t) nil [6223 6254])
            ("LSb32SS_SM_ICTL_IRQ_SM_ETH" variable (:constant-flag t) nil [6269 6295])
            ("LSb32SS_SM_ICTL_IRQ_SM_HPD" variable (:constant-flag t) nil [6310 6336])
            ("LSb32SS_SM_ICTL_IRQ_SM_IHPD" variable (:constant-flag t) nil [6351 6378])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_0" variable (:constant-flag t) nil [6393 6424])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_1" variable (:constant-flag t) nil [6439 6470])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_2" variable (:constant-flag t) nil [6485 6516])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_3" variable (:constant-flag t) nil [6531 6562])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_4" variable (:constant-flag t) nil [6577 6608])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_5" variable (:constant-flag t) nil [6623 6654])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_6" variable (:constant-flag t) nil [6669 6700])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_7" variable (:constant-flag t) nil [6715 6746])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_0" variable (:constant-flag t) nil [6761 6792])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_1" variable (:constant-flag t) nil [6807 6838])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_2" variable (:constant-flag t) nil [6853 6884])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_3" variable (:constant-flag t) nil [6899 6930])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_4" variable (:constant-flag t) nil [6945 6976])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_5" variable (:constant-flag t) nil [6991 7022])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_6" variable (:constant-flag t) nil [7037 7068])
            ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_7" variable (:constant-flag t) nil [7083 7114])
            ("SM_DTCM_SHARED_DATA_SIZE" variable (:constant-flag t) nil [10050 10074])
            ("SM_DTCM_SHARED_DATA_ADDR" variable (:constant-flag t) nil [10094 10118])
            ("SM_PINMUX_TABLE_OFFSET" variable (:constant-flag t) nil [10194 10216])
            ("SM_PINMUX_TABLE_SIZE" variable (:constant-flag t) nil [10259 10279])
            ("SM_CPU0_INPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10304 10328])
            ("SM_CPU1_INPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10378 10402])
            ("SM_CPU0_OUTPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10472 10497])
            ("SM_CPU1_OUTPUT_QUEUE_ADDR" variable (:constant-flag t) nil [10547 10572])
            ("MSG_LINUX_2_SM" type
               (:typedef ("" type
                     (:members 
                        ( ("MV_SM_POWER_LOWPOWERSTANDBY_REQUEST" variable
                             (:constant-flag t
                              :default-value (10829 10833)
                              :type "int")
                              (reparse-symbol enumsubparts) [10791 10833])
                          ("MV_SM_POWER_NORMALSTANDBY_REQUEST" variable
                             (:constant-flag t
                              :default-value (10872 10876)
                              :type "int")
                              (reparse-symbol enumsubparts) [10836 10876])
                          ("MV_SM_POWER_STANDBY_REQUEST" variable
                             (:constant-flag t
                              :default-value (10909 10910)
                              :type "int")
                              (reparse-symbol enumsubparts) [10879 10910])
                          ("MV_SM_POWER_SUSPEND_REQUEST" variable
                             (:constant-flag t
                              :default-value (10974 10975)
                              :type "int")
                              (reparse-symbol enumsubparts) [10944 10975])
                          ("MV_SM_POWER_BOOTUP_SOURCE_REQUEST" variable
                             (:constant-flag t
                              :default-value (11047 11051)
                              :type "int")
                              (reparse-symbol enumsubparts) [11011 11051])
                          ("MV_SM_POWER_CAST_WAKEUP_SM_REQUEST" variable
                             (:constant-flag t
                              :default-value (11091 11095)
                              :type "int")
                              (reparse-symbol enumsubparts) [11054 11095])
                          ("MV_SM_POWER_SYS_RESET" variable
                             (:constant-flag t
                              :default-value (11123 11127)
                              :type "int")
                              (reparse-symbol enumsubparts) [11099 11127]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [10775 11145])
            ("MSG_BOOTLOADER_2_SM" type
               (:typedef ("" type
                     (:members 
                        ( ("MV_SM_ACTIVE_2_LOWPOWERSTANDBY_RESP" variable
                             (:constant-flag t
                              :default-value (11231 11232)
                              :type "int")
                              (reparse-symbol enumsubparts) [11193 11232])
                          ("MV_SM_ACTIVE_2_NORMALSTANDBY_RESP" variable
                             (:constant-flag t
                              :default-value (11271 11272)
                              :type "int")
                              (reparse-symbol enumsubparts) [11235 11272])
                          ("MV_SM_ACTIVE_2_SUSPEND_RESP" variable
                             (:constant-flag t
                              :default-value (11335 11339)
                              :type "int")
                              (reparse-symbol enumsubparts) [11305 11339])
                          ("MV_SM_COLD_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11401 11402)
                              :type "int")
                              (reparse-symbol enumsubparts) [11374 11402])
                          ("MV_SM_LOWPOWERSTANDBY_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11472 11476)
                              :type "int")
                              (reparse-symbol enumsubparts) [11434 11476])
                          ("MV_SM_NORMALSTANDBY_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11515 11516)
                              :type "int")
                              (reparse-symbol enumsubparts) [11479 11516])
                          ("MV_SM_SUSPEND_2_ACTIVE_RESP" variable
                             (:constant-flag t
                              :default-value (11587 11588)
                              :type "int")
                              (reparse-symbol enumsubparts) [11557 11588]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11177 11640])
            ("save_irq" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11689 11694]))                  
                :type "unsigned long")
                nil [11659 11695])
            ("restore_irq" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :arguments 
                  ( ("flags" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [11720 11740]))                  
                :type "void")
                nil [11696 11741])
            ("local_irq_save" variable (:constant-flag t) nil [11751 11765])
            ("local_irq_restore" variable (:constant-flag t) nil [11833 11850]))          
      :file "sm.h"
      :pointmax 11943
      :fsize 11942
      :lastmodtime '(22163 13524 542961 525000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SM_SM_APB_ICTL2_BASE" . ((semantic-list "(SM_APBC_BASE + 0x4000)" 4843 . 4866)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WDT2" . ((number "2" 5623 . 5624)))
          ("LSb32SS_SM_ICTL_IRQ_SM_ADC" . ((number "12" 6044 . 6046)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_2" . ((number "23" 6520 . 6522)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_6" . ((number "35" 7072 . 7074)))
          ("local_irq_restore" (spp-arg-list ("flags") 11850 . 11857) . 
              ((DO "do" 11861 . 11863) (semantic-list "{				\\
		restore_irq(flags);	\\
	}" 11864 . 11897) (WHILE "while" 11898 . 11903) (semantic-list "(0)" 11904 . 11907)))
          ("SM_SECM_ALIAS_SIZE" . ((number "0x00010000" 816 . 826)))
          ("SM_WOL_BASE" . ((number "0x10010000" 856 . 866)))
          ("SOC_SECM" (spp-arg-list ("addr") 1586 . 1594) . ((semantic-list "( (int)addr - SM_SECM_BASE + SOC_SECM_BASE )" 1595 . 1639)))
          ("SM_SM_APB_RESERVE_0" . ((semantic-list "(SM_APBC_BASE)" 4636 . 4650)))
          ("SM_SM_APB_WDT1_BASE" . ((semantic-list "(SM_APBC_BASE + 0xD000)" 5321 . 5344)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_3" . ((number "24" 6566 . 6568)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_7" . ((number "36" 7118 . 7120)))
          ("SM_CPU0_INPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 4 )" 10329 . 10369)))
          ("SM_DTCM_ALIAS_SIZE" . ((number "0x00020000" 476 . 486)))
          ("SM_APBC_ALIAS_SIZE" . ((number "0x00010000" 647 . 657)))
          ("SOC_SECM_BASE" . ((number "0xf7fd0000" 1282 . 1292)))
          ("SOC_WOL" (spp-arg-list ("addr") 1655 . 1663) . ((semantic-list "( (int)addr - SM_WOL_BASE + SOC_WOL_BASE )" 1665 . 1707)))
          ("SM_SM_APB_GPIO0_BASE" . ((semantic-list "(SM_APBC_BASE + 0x1000)" 4681 . 4704)))
          ("LSb32SS_SM_ICTL_IRQ_SM_IHPD" . ((number "20" 6382 . 6384)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_4" . ((number "25" 6612 . 6614)))
          ("SM_PINMUX_TABLE_SIZE" . ((number "128" 10291 . 10294)))
          ("SM_CPU1_OUTPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 1 )" 10573 . 10613)))
          ("SM_CEC_ALIAS_SIZE" . ((number "0x00001000" 1139 . 1149)))
          ("SOC_DTCM_BASE" . ((number "0xf7fa0000" 1214 . 1224)))
          ("SOC_APBC_BASE" . ((number "0xf7fc0000" 1248 . 1258)))
          ("SOC_CEC_BASE" . ((number "0xf7fe1000" 1348 . 1358)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD0" . ((number "3" 5665 . 5666)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_5" . ((number "26" 6658 . 6660)))
          ("SM_SECM_SIZE" . ((number "0x00010000" 721 . 731)))
          ("SM_CEC_END" . ((semantic-list "(SM_CEC_BASE + SM_CEC_SIZE)" 1085 . 1112)))
          ("SOC_DTCM" (spp-arg-list ("addr") 1446 . 1454) . ((semantic-list "( (int)addr - SM_DTCM_BASE + SOC_DTCM_BASE )" 1455 . 1499)))
          ("SOC_APBC" (spp-arg-list ("addr") 1516 . 1524) . ((semantic-list "( (int)addr - SM_APBC_BASE + SOC_APBC_BASE )" 1525 . 1569)))
          ("SOC_CEC" (spp-arg-list ("addr") 1723 . 1731) . ((semantic-list "( (int)addr - SM_CEC_BASE + SOC_CEC_BASE )" 1733 . 1775)))
          ("MV_SM_READ_REG32" (spp-arg-list ("reg") 1982 . 1989) . ((semantic-list "( *( (volatile  UINT32*)SM_APBC( reg ) ) )" 1991 . 2033)))
          ("SM_SM_APB_ICTL1_BASE" . ((semantic-list "(SM_APBC_BASE + 0x3000)" 4789 . 4812)))
          ("SM_SM_APB_UART0_BASE" . ((semantic-list "(SM_APBC_BASE + 0x9000)" 5109 . 5132)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD1" . ((number "4" 5707 . 5708)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_6" . ((number "27" 6704 . 6706)))
          ("SM_CPU1_INPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 3 )" 10403 . 10443)))
          ("SM_ITCM_BASE" . ((number "0x00000000" 82 . 92)))
          ("SM_DTCM_SIZE" . ((number "0x00004000" 380 . 390)))
          ("SM_APBC_SIZE" . ((number "0x00010000" 551 . 561)))
          ("SM_APBC" (spp-arg-list ("reg") 1868 . 1875) . ((semantic-list "( (INT32)(reg) - SM_APBC_BASE + SOC_APBC_BASE )" 1884 . 1931)))
          ("SM_SM_APB_WDT0_BASE" . ((semantic-list "(SM_APBC_BASE + 0xB000)" 5215 . 5238)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD2" . ((number "5" 5749 . 5750)))
          ("LSb32SS_SM_ICTL_IRQ_SOC2SM_SW" . ((number "13" 6088 . 6090)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_7" . ((number "28" 6750 . 6752)))
          ("SM_DTCM_END" . ((semantic-list "(SM_DTCM_BASE + SM_DTCM_SIZE)" 419 . 448)))
          ("SM_APBC_END" . ((semantic-list "(SM_APBC_BASE + SM_APBC_SIZE)" 590 . 619)))
          ("SM_CEC_BASE" . ((number "0x10011000" 1017 . 1027)))
          ("MV_SM_READ_REG8" (spp-arg-list ("reg") 2057 . 2064) . ((semantic-list "( *( (volatile UCHAR*)SM_APBC( reg ) ) )" 2066 . 2106)))
          ("MV_SM_WRITE_REG8" (spp-arg-list ("reg" "value") 2233 . 2247) . ((semantic-list "( *( (volatile UCHAR*)SM_APBC( reg ) ) = (UCHAR)( value ) )" 2248 . 2307)))
          ("SM_SM_APB_RESERVE_5" . ((semantic-list "(SM_APBC_BASE + 0x5000)" 4896 . 4919)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD3" . ((number "6" 5791 . 5792)))
          ("LSb32SS_SM_ICTL_IRQ_SM_UART0" . ((number "8" 5875 . 5876)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WOL" . ((number "15" 6171 . 6173)))
          ("SM_DTCM_SHARED_DATA_SIZE" . ((number "512" 10082 . 10085)))
          ("SM_CPU0_OUTPUT_QUEUE_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 2 )" 10498 . 10538)))
          ("SM_WOL_SIZE" . ((number "0x00001000" 888 . 898)))
          ("SM_SM_APB_RESERVE_6" . ((semantic-list "(SM_APBC_BASE + 0x6000)" 4949 . 4972)))
          ("SM_SM_APB_RESERVE_C" . ((semantic-list "(SM_APBC_BASE + 0xC000)" 5268 . 5291)))
          ("SM_SM_APB_TIMER1_BASE" . ((semantic-list "(SM_APBC_BASE + 0xF000)" 5431 . 5454)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD4" . ((number "7" 5833 . 5834)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_0" . ((number "29" 6796 . 6798)))
          ("SM_DTCM_SHARED_DATA_ADDR" . ((semantic-list "( SM_DTCM_END - SM_MSGQ_TOTAL_SIZE * 4 - SM_DTCM_SHARED_DATA_SIZE)" 10119 . 10185)))
          ("SM_PINMUX_TABLE_OFFSET" . ((symbol "SM_DTCM_SHARED_DATA_ADDR" 10226 . 10250)))
          ("SM_ITCM_END" . ((semantic-list "(SM_ITCM_BASE + SM_ITCM_SIZE)" 248 . 277)))
          ("SM_ITCM_ALIAS_SIZE" . ((number "0x00020000" 305 . 315)))
          ("SM_SM_APB_ICTL0_BASE" . ((semantic-list "(SM_APBC_BASE + 0x2000)" 4735 . 4758)))
          ("SM_SM_APB_RESERVE_7" . ((semantic-list "(SM_APBC_BASE + 0x7000)" 5002 . 5025)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD5" . ((number "9" 5917 . 5918)))
          ("LSb32SS_SM_ICTL_IRQ_SM_GPIO_A" . ((number "11" 6003 . 6005)))
          ("LSb32SS_SM_ICTL_IRQ_SM_CEC" . ((number "16" 6212 . 6214)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_1" . ((number "30" 6842 . 6844)))
          ("local_irq_save" (spp-arg-list ("flags") 11765 . 11772) . 
              ((DO "do" 11777 . 11779) (semantic-list "{				\\
		flags = save_irq();	\\
	}" 11780 . 11813) (WHILE "while" 11814 . 11819) (semantic-list "(0)" 11820 . 11823)))
          ("SOC_ITCM_BASE" . ((number "0xf7f80000" 1180 . 1190)))
          ("SOC_ITCM" (spp-arg-list ("addr") 1376 . 1384) . ((semantic-list "( (int)addr - SM_ITCM_BASE + SOC_ITCM_BASE )" 1385 . 1429)))
          ("SM_SM_APB_RESERVE_8" . ((semantic-list "(SM_APBC_BASE + 0x8000)" 5055 . 5078)))
          ("LSb32SS_SM_ICTL_IRQ_SM_RSVD6" . ((number "10" 5959 . 5961)))
          ("LSb32SS_SM_ICTL_IRQ_SM_CEC_FIFO" . ((number "17" 6258 . 6260)))
          ("LSb32SS_SM_ICTL_IRQ_SM_HPD" . ((number "19" 6340 . 6342)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_2" . ((number "31" 6888 . 6890)))
          ("__SYSTEM_MANAGER_H__")
          ("SM_SECM_END" . ((semantic-list "(SM_SECM_BASE + SM_SECM_SIZE)" 759 . 788)))
          ("MV_SM_WRITE_REG32" (spp-arg-list ("reg" "value") 2132 . 2146) . ((semantic-list "( *( (volatile UINT32*)SM_APBC( reg ) ) = (UINT32)( value ) )" 2147 . 2208)))
          ("SM_SM_APB_WDT2_BASE" . ((semantic-list "(SM_APBC_BASE + 0xA000)" 5162 . 5185)))
          ("SM_SM_SYS_CTRL_REG_BASE" . ((semantic-list "(0x10012000)" 5488 . 5500)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_3" . ((number "32" 6934 . 6936)))
          ("SM_ITCM_SIZE" . ((number "0x00006800" 202 . 212)))
          ("SM_SECM_BASE" . ((number "0x40000000" 688 . 698)))
          ("SM_WOL_END" . ((semantic-list "(SM_WOL_BASE + SM_WOL_SIZE)" 924 . 951)))
          ("SM_WOL_ALIAS_SIZE" . ((number "0x00001000" 978 . 988)))
          ("SOC_WOL_BASE" . ((number "0xf7fe0000" 1315 . 1325)))
          ("SM_SM_APB_TIMER0_BASE" . ((semantic-list "(SM_APBC_BASE + 0xE000)" 5376 . 5399)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WDT0" . ((number "0" 5541 . 5542)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TSEN" . ((number "14" 6130 . 6132)))
          ("LSb32SS_SM_ICTL_IRQ_SM_ETH" . ((number "18" 6299 . 6301)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_0" . ((number "21" 6428 . 6430)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_4" . ((number "33" 6980 . 6982)))
          ("SM_DTCM_BASE" . ((number "0x04000000" 347 . 357)))
          ("SM_APBC_BASE" . ((number "0x10000000" 518 . 528)))
          ("SM_CEC_SIZE" . ((number "0x00001000" 1049 . 1059)))
          ("LSb32SS_SM_ICTL_IRQ_SM_WDT1" . ((number "1" 5582 . 5583)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER0_1" . ((number "22" 6474 . 6476)))
          ("LSb32SS_SM_ICTL_IRQ_SM_TIMER1_5" . ((number "34" 7026 . 7028)))
          )
)
    (semanticdb-table "sm_common.h"
      :major-mode 'c-mode
      :tags 
        '( ("__SM_COMMON_H__" variable (:constant-flag t) nil [33 48])
            ("SM_MSG_SIZE" variable (:constant-flag t) nil [58 69])
            ("SM_MSG_BODY_SIZE" variable (:constant-flag t) nil [85 101])
            ("SM_MSGQ_TOTAL_SIZE" variable (:constant-flag t) nil [145 163])
            ("SM_MSGQ_HEADER_SIZE" variable (:constant-flag t) nil [177 196])
            ("SM_MSGQ_SIZE" variable (:constant-flag t) nil [217 229])
            ("SM_MSGQ_MSG_COUNT" variable (:constant-flag t) nil [288 305])
            ("MV_SM_Message" type
               (:typedef ("" type
                     (:members 
                        ( ("m_iModuleID" variable (:type "short") (reparse-symbol classsubparts) [357 377])
                          ("m_iMsgLen" variable (:type "short") (reparse-symbol classsubparts) [382 400])
                          ("m_pucMsgBody" variable
                             (:dereference 1
                              :type "char")
                              (reparse-symbol classsubparts) [405 444]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [336 461])
            ("MV_SM_MsgQ" type
               (:typedef ("" type
                     (:members 
                        ( ("m_iWrite" variable (:type "int") (reparse-symbol classsubparts) [484 497])
                          ("m_iRead" variable (:type "int") (reparse-symbol classsubparts) [502 514])
                          ("m_iWriteTotal" variable (:type "int") (reparse-symbol classsubparts) [519 537])
                          ("m_iReadTotal" variable (:type "int") (reparse-symbol classsubparts) [542 559])
                          ("m_Padding" variable
                             (:dereference 1
                              :type "char")
                              (reparse-symbol classsubparts) [564 619])
                          ("m_Queue" variable
                             (:dereference 1
                              :type "char")
                              (reparse-symbol classsubparts) [624 654]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [463 668])
            ("MV_SM_RSTFLAG_COLD" variable (:constant-flag t) nil [779 797])
            ("MV_SoC_STATE_SYSPOWERON" variable (:constant-flag t) nil [846 869])
            ("MV_SoC_STATE_COLDBOOT" variable (:constant-flag t) nil [886 907])
            ("MV_SM_POWER_FASTBOOT_ENABLE" variable (:constant-flag t) nil [927 954])
            ("MV_SM_POWER_FASTBOOT_DISABLE" variable (:constant-flag t) nil [968 996])
            ("MV_SM_POWER_INSPECT_REQUEST" variable (:constant-flag t) nil [1013 1040])
            ("MV_SM_POWER_WAKEUP_SOURCE_REQUEST" variable (:constant-flag t) nil [1055 1088])
            ("MV_SM_POWER_WARMDOWN_TIME" variable (:constant-flag t) nil [1099 1124])
            ("MV_SM_POWER_WARMUP_TIME" variable (:constant-flag t) nil [1142 1165])
            ("MV_SM_POWER_WARMUP_TIME_REQUEST" variable (:constant-flag t) nil [1185 1216])
            ("MV_SM_POWER_WAKEUP_FOR_BGUPDATE" variable (:constant-flag t) nil [1228 1259])
            ("MV_SM_GPIO_SET" variable (:constant-flag t) nil [1301 1315])
            ("MV_SM_GPIO_GET" variable (:constant-flag t) nil [1337 1351])
            ("MV_SM_IR_Linuxready" variable (:constant-flag t) nil [1398 1417])
            ("MV_SM_INPUT_DISABLE" variable (:constant-flag t) nil [1481 1500])
            ("MV_SM_INPUT_ENABLE" variable (:constant-flag t) nil [1517 1535])
            ("MV_SM_INPUT_SEND_KEY" variable (:constant-flag t) nil [1553 1573])
            ("MV_SM_WD_APP_START" variable (:constant-flag t) nil [1728 1746])
            ("MV_SM_WD_APP_EXIT" variable (:constant-flag t) nil [1765 1782])
            ("MV_SM_WD_APP_CONTINUE" variable (:constant-flag t) nil [1802 1823])
            ("MV_SM_WD_Kickoff" variable (:constant-flag t) nil [1843 1859])
            ("MV_SM_TEMP_SAMPLE" variable (:constant-flag t) nil [1914 1931])
            ("MV_SM_TEMP_CPU_TYPE" variable (:constant-flag t) nil [1951 1970])
            ("MV_SM_TEMP_CPU_TYPE_B0" variable (:constant-flag t) nil [1988 2010])
            ("MV_SM_CEC_APPREADY" variable (:constant-flag t) nil [2055 2073])
            ("MV_SM_CEC_INFO" variable (:constant-flag t) nil [2091 2105])
            ("MV_SM_CEC_OSD_INFO" variable (:constant-flag t) nil [2127 2145])
            ("MV_SM_CEC_HDMICTRL_ONOFF" variable (:constant-flag t) nil [2163 2187])
            ("MV_SM_CEC_APP_REQUESTED" variable (:constant-flag t) nil [2203 2226])
            ("MV_SM_CEC_NO_APP_REQUESTED" variable (:constant-flag t) nil [2243 2269])
            ("MV_SM_CEC_ACTIVE_SOURCE_EVENT" variable (:constant-flag t) nil [2283 2312])
            ("MV_SM_CEC_STREAM_PATH_EVENT" variable (:constant-flag t) nil [2327 2354])
            ("MV_SM_CEC_UC_PRESSED_EVENT" variable (:constant-flag t) nil [2367 2393])
            ("MV_SM_CEC_WAKEUP_MSG" variable (:constant-flag t) nil [2407 2427])
            ("MV_SM_CEC_COLD_BOOT" variable (:constant-flag t) nil [2447 2466])
            ("MV_SM_MODULE_ID" type
               (:typedef ("" type
                     (:members 
                        ( ("MV_SM_ID_SYS" variable
                             (:constant-flag t
                              :default-value (2510 2511)
                              :type "int")
                              (reparse-symbol enumsubparts) [2495 2511])
                          ("MV_SM_ID_COMM" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2517 2531])
                          ("MV_SM_ID_IR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2536 2548])
                          ("MV_SM_ID_KEY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2553 2566])
                          ("MV_SM_ID_POWER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2571 2586])
                          ("MV_SM_ID_WDT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2591 2604])
                          ("MV_SM_ID_TEMP" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2609 2623])
                          ("MV_SM_ID_VFD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2628 2641])
                          ("MV_SM_ID_SPI" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2646 2659])
                          ("MV_SM_ID_I2C" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2664 2677])
                          ("MV_SM_ID_UART" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2682 2696])
                          ("MV_SM_ID_CEC" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2701 2714])
                          ("MV_SM_ID_WOL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2719 2732])
                          ("MV_SM_ID_LED" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2737 2750])
                          ("MV_SM_ID_ETH" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2755 2768])
                          ("MV_SM_ID_DDR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2773 2786])
                          ("MV_SM_ID_WIFIBT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2791 2807])
                          ("MV_SM_ID_DEBUG" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2845 2860])
                          ("MV_SM_ID_CONSOLE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2865 2882])
                          ("MV_SM_ID_MAX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2887 2900]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2476 2919])
            ("MAX_MSG_TYPE" variable (:constant-flag t) nil [2929 2941])
            ("SM_READ" variable (:constant-flag t) nil [2996 3003])
            ("SM_WRITE" variable (:constant-flag t) nil [3024 3032])
            ("SM_RDWR" variable (:constant-flag t) nil [3052 3059])
            ("SM_Enable_WaitQueue" variable (:constant-flag t) nil [3080 3099])
            ("SM_Disable_WaitQueue" variable (:constant-flag t) nil [3115 3135])
            ("_MV_SM_WAKEUP_SOURCE_TYPE" type
               (:members 
                  ( ("MV_SM_WAKEUP_SOURCE_INVALID" variable
                       (:constant-flag t
                        :default-value (3222 3224)
                        :type "int")
                        (reparse-symbol enumsubparts) [3192 3224])
                    ("MV_SM_WAKEUP_SOURCE_IR" variable
                       (:constant-flag t
                        :default-value (3255 3256)
                        :type "int")
                        (reparse-symbol enumsubparts) [3230 3256])
                    ("MV_SM_WAKEUP_SOURCE_WIFI_BT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3262 3290])
                    ("MV_SM_WAKEUP_SOURCE_WOL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3295 3319])
                    ("MV_SM_WAKEUP_SOURCE_VGA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3324 3348])
                    ("MV_SM_WAKEUP_SOURCE_CEC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3353 3377])
                    ("MV_SM_WAKEUP_SOURCE_TIMER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3382 3408])
                    ("MV_SM_WAKEUP_SOURCE_CAST" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3413 3438])
                    ("MV_SM_WAKEUP_SOURCE_BGUPDATE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3443 3472])
                    ("MV_SM_WAKEUP_SOURCE_NUM" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3477 3501]))                  
                :type "enum")
                nil [3147 3529])
            ("MV_SM_WAKEUP_SOURCE_TYPE" type
               (:typedef ("_MV_SM_WAKEUP_SOURCE_TYPE" type (:type "enum") nil nil)
                :type "typedef")
                nil [3147 3529])
            ("_MV_SM_BOOTUP_REASON" type
               (:members 
                  ( ("POWER_BOOTUP_SOURCE_INVALID" variable
                       (:constant-flag t
                        :default-value (3601 3603)
                        :type "int")
                        (reparse-symbol enumsubparts) [3571 3603])
                    ("POWER_BOOTUP_SOURCE_ACON" variable
                       (:constant-flag t
                        :default-value (3636 3637)
                        :type "int")
                        (reparse-symbol enumsubparts) [3609 3637])
                    ("POWER_BOOTUP_SOURCE_DCON" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3643 3668])
                    ("POWER_BOOTUP_SOURCE_REBOOT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3673 3700])
                    ("POWER_BOOTUP_SOURCE_BGUPDATE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3705 3734]))                  
                :type "enum")
                nil [3531 3758])
            ("MV_SM_BOOTUP_REASON" type
               (:typedef ("_MV_SM_BOOTUP_REASON" type (:type "enum") nil nil)
                :type "typedef")
                nil [3531 3758]))          
      :file "sm_common.h"
      :pointmax 3790
      :fsize 3789
      :lastmodtime '(22163 13524 542961 525000)
      :unmatched-syntax nil
      :lexical-table 
        '(("MV_SM_CEC_OSD_INFO" . ((number "0x3" 2151 . 2154)))
          ("SM_MSG_SIZE" . ((number "32" 74 . 76)))
          ("MV_SM_TEMP_CPU_TYPE_B0" . ((number "0xB0" 2016 . 2020)))
          ("MV_SM_CEC_NO_APP_REQUESTED" . ((number "0x6" 2271 . 2274)))
          ("SM_Enable_WaitQueue" . ((number "0x1234" 3100 . 3106)))
          ("SM_MSGQ_HEADER_SIZE" . ((symbol "SM_MSG_SIZE" 197 . 208)))
          ("SM_MSGQ_MSG_COUNT" . ((semantic-list "(SM_MSGQ_SIZE/SM_MSG_SIZE)" 308 . 334)))
          ("MV_SM_POWER_WAKEUP_SOURCE_REQUEST" . ((number "3" 1089 . 1090)))
          ("MV_SM_GPIO_GET" . ((number "0x7" 1361 . 1364)))
          ("MV_SM_CEC_UC_PRESSED_EVENT" . ((number "0x9" 2395 . 2398)))
          ("SM_Disable_WaitQueue" . ((number "0x3456" 3139 . 3145)))
          ("MV_SM_POWER_FASTBOOT_DISABLE" . ((number "0x0E" 1000 . 1004)))
          ("MV_SM_POWER_WARMDOWN_TIME" . ((number "11" 1131 . 1133)))
          ("MV_SM_POWER_WARMUP_TIME" . ((number "12" 1174 . 1176)))
          ("MV_SM_IR_Linuxready" . ((number "30" 1422 . 1424)))
          ("MV_SM_POWER_WAKEUP_FOR_BGUPDATE" . ((number "0xde" 1260 . 1264)))
          ("MV_SM_RSTFLAG_COLD" . ((number "0xFFFF" 803 . 809)))
          ("MV_SM_POWER_FASTBOOT_ENABLE" . ((number "0x0F" 955 . 959)))
          ("MV_SM_CEC_HDMICTRL_ONOFF" . ((number "0x4" 2191 . 2194)))
          ("SM_RDWR" . ((number "0x3" 3068 . 3071)))
          ("SM_MSGQ_TOTAL_SIZE" . ((number "512" 165 . 168)))
          ("SM_MSGQ_SIZE" . ((semantic-list "(SM_MSGQ_TOTAL_SIZE - SM_MSGQ_HEADER_SIZE)" 237 . 279)))
          ("MV_SM_GPIO_SET" . ((number "0x6" 1325 . 1328)))
          ("MV_SM_INPUT_DISABLE" . ((number "0x1" 1505 . 1508)))
          ("MV_SM_WD_APP_EXIT" . ((number "0x36" 1789 . 1793)))
          ("MV_SM_TEMP_CPU_TYPE" . ((number "0xCC" 1975 . 1979)))
          ("SM_WRITE" . ((number "0x2" 3040 . 3043)))
          ("MV_SoC_STATE_COLDBOOT" . ((number "0x21" 914 . 918)))
          ("MV_SM_POWER_INSPECT_REQUEST" . ((number "0xED" 1041 . 1045)))
          ("SM_MSG_BODY_SIZE" . ((semantic-list "(SM_MSG_SIZE - sizeof(short)*2)" 105 . 136)))
          ("MV_SM_CEC_WAKEUP_MSG" . ((number "0xA" 2435 . 2438)))
          ("MV_SoC_STATE_SYSPOWERON" . ((number "0x0" 874 . 877)))
          ("MV_SM_WD_APP_CONTINUE" . ((number "0x63" 1830 . 1834)))
          ("MV_SM_WD_Kickoff" . ((number "0x24" 1867 . 1871)))
          ("MV_SM_CEC_APP_REQUESTED" . ((number "0x5" 2231 . 2234)))
          ("MV_SM_CEC_ACTIVE_SOURCE_EVENT" . ((number "0x7" 2315 . 2318)))
          ("MV_SM_CEC_STREAM_PATH_EVENT" . ((number "0x8" 2355 . 2358)))
          ("MV_SM_TEMP_SAMPLE" . ((number "0xF0" 1938 . 1942)))
          ("MV_SM_INPUT_ENABLE" . ((number "0x2" 1541 . 1544)))
          ("MV_SM_CEC_APPREADY" . ((number "0x1" 2079 . 2082)))
          ("__SM_COMMON_H__")
          ("MV_SM_POWER_WARMUP_TIME_REQUEST" . ((number "13" 1217 . 1219)))
          ("MV_SM_INPUT_SEND_KEY" . ((number "0x4" 1581 . 1584)))
          ("MV_SM_WD_APP_START" . ((number "0x12" 1752 . 1756)))
          ("MV_SM_CEC_INFO" . ((number "0x2" 2115 . 2118)))
          ("MV_SM_CEC_COLD_BOOT" . ((number "0xB" 2471 . 2474)))
          ("MAX_MSG_TYPE" . ((semantic-list "(MV_SM_ID_MAX - 1)" 2942 . 2960)))
          ("SM_READ" . ((number "0x1" 3012 . 3015)))
          )
))
  :file "!home!qichen!bg4dtv_20151231_rc3_a0!vendor!marvell-sdk!MV88DE3100_SDK!MV88DE3100_Tools!bsp!sm_rom!core!include!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
