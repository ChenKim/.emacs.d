;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("string.h" include (:system-flag t) nil [622 641])
            ("stdbool.h" include (:system-flag t) nil [642 662])
            ("stdio.h" include (:system-flag t) nil [663 681])
            ("stdlib.h" include (:system-flag t) nil [682 701])
            ("stdarg.h" include (:system-flag t) nil [702 721])
            ("unistd.h" include (:system-flag t) nil [722 741])
            ("expr.h" include nil nil [743 760])
            ("BooleanString" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [905 919]))                  
                :type "int")
                nil [887 948])
            ("Evaluate" function
               (:pointer 1
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [965 978])
                    ("expr" variable
                       (:pointer 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [979 990]))                  
                :type "char")
                nil [950 1311])
            ("EvaluateValue" function
               (:pointer 1
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1334 1347])
                    ("expr" variable
                       (:pointer 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1348 1359]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [1313 1427])
            ("StringValue" function
               (:pointer 1
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1448 1458]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [1429 1620])
            ("FreeValue" function
               (:arguments 
                  ( ("v" variable
                       (:pointer 1
                        :type ("Value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1637 1646]))                  
                :type "void")
                nil [1622 1709])
            ("ConcatFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1727 1744])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1745 1758])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1759 1768])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1769 1782]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [1711 2521])
            ("IfElseFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2539 2556])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2557 2570])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [2571 2580])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2581 2594]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [2523 3138])
            ("AbortFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3155 3172])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3173 3186])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [3187 3196])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3197 3210]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [3140 3457])
            ("AssertFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3475 3492])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3493 3506])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [3507 3516])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3517 3530]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [3459 4240])
            ("SleepFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4257 4274])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4275 4288])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [4289 4298])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4299 4312]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [4242 4486])
            ("StdoutFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4504 4521])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4522 4535])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [4536 4545])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4546 4559]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [4488 4796])
            ("LogicalAndFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4818 4835])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4836 4849])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [4869 4878])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4879 4892]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [4798 5132])
            ("LogicalOrFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5153 5170])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5171 5184])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [5204 5213])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5214 5227]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [5134 5468])
            ("LogicalNotFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5490 5507])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5508 5521])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [5542 5551])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5552 5565]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [5470 5741])
            ("SubstringFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5762 5779])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5780 5793])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [5813 5822])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5823 5836]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [5743 6181])
            ("EqualityFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6201 6218])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6219 6232])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [6233 6242])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6243 6256]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [6183 6584])
            ("InequalityFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6606 6623])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6624 6637])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [6638 6647])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6648 6661]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [6586 6989])
            ("SequenceFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7009 7026])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7027 7040])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [7041 7050])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7051 7064]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [6991 7215])
            ("LessThanIntFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7238 7255])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7256 7269])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [7270 7279])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7280 7293]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [7217 7928])
            ("GreaterThanIntFn" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7954 7971])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7972 7985])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [8010 8019])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8020 8033]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [7930 8301])
            ("Literal" function
               (:pointer 1
                :arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8318 8335])
                    ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8336 8349])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [8350 8359])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8360 8373]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [8303 8415])
            ("Build" function
               (:pointer 1
                :arguments 
                  ( ("fn" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8429 8441])
                    ("loc" variable (:type ("YYLTYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8442 8454])
                    ("count" variable (:type "int") (reparse-symbol arg-sub-list) [8455 8465])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [8466 8470]))                  
                :type ("Expr" type (:type "class") nil nil))
                nil [8417 8826])
            ("fn_entries" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [8991 9017])
            ("fn_size" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [9018 9041])
            ("fn_table" variable
               (:pointer 1
                :default-value "NULL"
                :type ("NamedFunction" type (:type "class") nil nil))
                nil [9042 9073])
            ("RegisterFunction" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9097 9114])
                    ("fn" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9115 9127]))                  
                :type "void")
                nil [9075 9364])
            ("fn_entry_compare" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("a" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [9394 9408])
                    ("b" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [9409 9423]))                  
                :type "int")
                nil [9366 9562])
            ("FinishRegistration" function (:type "void") nil [9564 9667])
            ("FindFunction" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9691 9708]))                  
                :type ("Function" type (:type "class") nil nil))
                nil [9669 9958])
            ("RegisterBuiltins" function (:type "void") nil [9960 10401])
            ("ReadArgs" function
               (:arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10797 10810])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10811 10824])
                    ("count" variable (:type "int") (reparse-symbol arg-sub-list) [10825 10835])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [10836 10840]))                  
                :type "int")
                nil [10784 11325])
            ("ReadValueArgs" function
               (:arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11549 11562])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11563 11576])
                    ("count" variable (:type "int") (reparse-symbol arg-sub-list) [11577 11587])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [11588 11592]))                  
                :type "int")
                nil [11531 12090])
            ("ReadVarArgs" function
               (:pointer 2
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12337 12350])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [12351 12360])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12361 12374]))                  
                :type "char")
                nil [12318 12741])
            ("ReadValueVarArgs" function
               (:pointer 2
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12994 13007])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [13008 13017])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13018 13031]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [12969 13411])
            ("ErrorAbort" function
               (:pointer 1
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13527 13540])
                    ("format" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [13541 13560])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [13561 13565]))                  
                :type ("Value" type (:type "class") nil nil))
                nil [13509 13767]))          
      :file "expr.c"
      :pointmax 13768
      :fsize 13767
      :lastmodtime '(22775 10488 243189 160000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "expr.h"
      :fsize 6025
      :lastmodtime '(22775 10488 243189 160000))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("expr" variable (:type "int") nil [1489 1521])
            ("expr" variable (:type "int") nil [3245 3368])
            ("yyerror" function
               (:arguments 
                  ( ("root" variable
                       (:pointer 2
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3387 3399])
                    ("error_count" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [3400 3417])
                    ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3418 3432]))                  
                :type "void")
                nil [3374 3559])
            ("parse_string" function
               (:arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3578 3594])
                    ("root" variable
                       (:pointer 2
                        :type ("Expr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3595 3607])
                    ("error_count" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [3608 3625]))                  
                :type "int")
                nil [3561 3714]))          
      :file "parser.y"
      :pointmax 3715
      :fsize 3714
      :lastmodtime '(22775 10488 243189 160000)
      :unmatched-syntax '((punctuation 3371 . 3372) (punctuation 3370 . 3371) (string 3241 . 3244) (symbol 3233 . 3240) (punctuation 3231 . 3232) (semantic-list 3152 . 3230) (symbol 3147 . 3151) (punctuation 3145 . 3146) (semantic-list 3104 . 3144) (punctuation 3087 . 3088) (symbol 3080 . 3087) (punctuation 3077 . 3078) (semantic-list 2704 . 3076) (string 2700 . 2703) (symbol 2692 . 2699) (string 2688 . 2691) (symbol 2681 . 2687) (punctuation 2679 . 2680) (semantic-list 2634 . 2678) (symbol 2628 . 2633) (symbol 2623 . 2627) (symbol 2618 . 2622) (symbol 2613 . 2617) (symbol 2608 . 2612) (symbol 2603 . 2607) (symbol 2600 . 2602) (punctuation 2597 . 2598) (semantic-list 2556 . 2596) (symbol 2540 . 2545) (symbol 2535 . 2539) (symbol 2530 . 2534) (symbol 2525 . 2529) (symbol 2522 . 2524) (punctuation 2519 . 2520) (semantic-list 2478 . 2518) (symbol 2448 . 2452) (string 2444 . 2447) (punctuation 2441 . 2442) (semantic-list 2397 . 2440) (symbol 2371 . 2375) (symbol 2368 . 2370) (symbol 2363 . 2367) (punctuation 2360 . 2361) (semantic-list 2315 . 2359) (symbol 2290 . 2294) (symbol 2286 . 2289) (symbol 2281 . 2285) (punctuation 2278 . 2279) (semantic-list 2233 . 2277) (symbol 2207 . 2211) (symbol 2204 . 2206) (symbol 2199 . 2203) (punctuation 2196 . 2197) (semantic-list 2153 . 2195) (symbol 2127 . 2131) (symbol 2124 . 2126) (symbol 2119 . 2123) (punctuation 2116 . 2117) (semantic-list 2075 . 2115) (symbol 2050 . 2054) (string 2046 . 2049) (symbol 2041 . 2045) (punctuation 2038 . 2039) (semantic-list 1989 . 2037) (symbol 1965 . 1969) (string 1961 . 1964) (symbol 1955 . 1960) (punctuation 1952 . 1953) (semantic-list 1909 . 1951) (symbol 1884 . 1888) (string 1880 . 1883) (symbol 1875 . 1879) (punctuation 1872 . 1873) (semantic-list 1823 . 1871) (string 1794 . 1797) (symbol 1789 . 1793) (punctuation 1786 . 1787) (semantic-list 1737 . 1785) (string 1712 . 1715) (symbol 1707 . 1711) (string 1703 . 1706) (punctuation 1700 . 1701) (semantic-list 1537 . 1699) (symbol 1530 . 1536) (punctuation 1527 . 1528) (symbol 1523 . 1527) (punctuation 1486 . 1487) (symbol 1481 . 1486) (punctuation 1478 . 1479) (punctuation 1477 . 1478) (string 1472 . 1475) (symbol 1466 . 1471) (punctuation 1465 . 1466) (string 1461 . 1464) (symbol 1456 . 1460) (punctuation 1455 . 1456) (symbol 1452 . 1454) (symbol 1449 . 1451) (symbol 1444 . 1448) (punctuation 1443 . 1444) (symbol 1439 . 1442) (symbol 1434 . 1438) (punctuation 1433 . 1434) (symbol 1430 . 1432) (symbol 1425 . 1429) (punctuation 1424 . 1425) (string 1420 . 1423) (symbol 1415 . 1419) (punctuation 1414 . 1415) (string 1410 . 1413) (symbol 1405 . 1409) (punctuation 1404 . 1405) (symbol 1342 . 1349) (punctuation 1341 . 1342) (symbol 1336 . 1341) (punctuation 1335 . 1336) (semantic-list 1316 . 1334) (symbol 1310 . 1315) (punctuation 1309 . 1310) (symbol 1304 . 1309) (punctuation 1303 . 1304) (semantic-list 1289 . 1302) (symbol 1283 . 1288) (punctuation 1282 . 1283) (symbol 1277 . 1282) (punctuation 1276 . 1277) (symbol 1267 . 1274) (punctuation 1265 . 1266) (symbol 1261 . 1265) (punctuation 1260 . 1261) (symbol 1255 . 1259) (punctuation 1254 . 1255) (symbol 1249 . 1253) (punctuation 1247 . 1248) (symbol 1243 . 1247) (punctuation 1242 . 1243) (symbol 1237 . 1241) (punctuation 1236 . 1237) (symbol 1232 . 1235) (symbol 1225 . 1231) (punctuation 1223 . 1224) (symbol 1220 . 1223) (punctuation 1219 . 1220) (symbol 1213 . 1218) (punctuation 1212 . 1213) (symbol 1206 . 1211) (symbol 1201 . 1205) (symbol 1196 . 1200) (symbol 1193 . 1195) (symbol 1190 . 1192) (symbol 1187 . 1189) (symbol 1178 . 1186) (symbol 1171 . 1177) (symbol 1168 . 1170) (symbol 1164 . 1167) (symbol 1158 . 1163) (punctuation 1157 . 1158) (semantic-list 1057 . 1155) (UNION 1051 . 1056) (punctuation 1050 . 1051) (symbol 1039 . 1048) (punctuation 1038 . 1039) (semantic-list 2 . 1036) (punctuation 1 . 2))))
  :file "!home!chenqi!work!1A_code!bootable!recovery!edify!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
